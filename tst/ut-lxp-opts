#!/bin/bash

# === WELCOME ===
# 
# BLSS stands for Bootstrapped Linux Server Systems, it is set of tools to quickly 
# assemble multiple small & optimized Linux-based virtual appliances with the 
# purpose of an easy deployment of package-based distributed systems, like Apache 
# Hadoop Cloudera Distribution, where every server have a different role in a 
# computational cluster or grid. 
# 
# The delivered virtual appliances fit better for servicing purpose, they are 
# reduced in size and have a small memory footprint. The lifecycle of such systems 
# is composed of three phases: prototyping, where shared packages & configuration 
# is settled; cloning, where different server roles are defined; and finally 
# deployment where unique appliances are produced.
# 
# The project is hosted at https://bitbucket.org/eduardo_lago_aguilar/blss
# 
# === AUTHOR ===
#   Written by Eduardo Lago Aguilar, eduardo.lago.aguilar@gmail.com, 
#   http://eduardo-lago.blogspot.com

# ut-lxp-opts:
#
#   Tests for failing conditions on the command line and configuration files 
# options for lxp script.

# Resolve script location, $0 may be a link
script="$0"
# Need this for relative symlinks
while [ -h "$script" ] ; do
  lst=$(ls -ld "$script")
  lnk=$(expr "$lst" : '.*-> \(.*\)$')
  if expr "$lnk" : '/.*' > /dev/null; then
    script="$lnk"
  else
    script=$(dirname "$script")/"$lnk"
  fi
done
BLSS_HOME=$(dirname "$script")/..
BIN="$BLSS_HOME"/bin
ENV="$BLSS_HOME"/env
EXT="$BLSS_HOME"/ext
TST="$BLSS_HOME"/tst

. "$TST"/tst-commons 

# Total amount of tests to perfom
plan_tests 217

# Test Case: Test for environment

export BLSS_ENV=$(mktemp -d) && rmdir "$BLSS_ENV"
not_ok_ "Verify if BLSS_ENV=(non-existing directory) fails" $BIN/lxp | \
  ln_is ">>> ERROR: Environment '$BLSS_ENV' doesn't exists or isn't a readable directory >>>"
unset BLSS_ENV

export BLSS_ENV=$(mktemp)
not_ok_ "Verify if BLSS_ENV=(non-a-directory) fails" $BIN/lxp | \
  ln_is ">>> ERROR: Environment '$BLSS_ENV' doesn't exists or isn't a readable directory >>>"
rm "$BLSS_ENV"
unset BLSS_ENV

# Test Case: General tests for command line options
export BLSS_ENV=$(mktemp -d) # an empty BLSS_ENV

# --suite
not_ok_ "Verify if a repeated command line option --suite fails" $BIN/lxp --suite lenny --suite maverick | \
  ln_is ">>> ERROR: --suite command line option was already specified >>>"

not_ok_ "Verify if command line option --suite without argument fails" $BIN/lxp --suite | \
  ln_like "--suite' requires an argument"

not_ok_ "Verify if command line option --suite with an empty argument fails" $BIN/lxp --suite "" | \
  ln_like ">>> ERROR: Command line option '--suite' requires an non-empty argument >>>"

not_ok_ "Verify if command line option --suite with an unsupported argument fails" $BIN/lxp --suite "unamed" | \
  lst_ln_like ">>> ERROR: Command line/conf file option --suite/suite requires a supported argument. See --help command line option for help >>>"

# --architecture
not_ok_ "Verify if a repeated command line option --architecture fails" $BIN/lxp --architecture amd64 --architecture i386 | \
  ln_is ">>> ERROR: --architecture command line option was already specified >>>"

not_ok_ "Verify if command line option --architecture without argument fails" $BIN/lxp --architecture | \
  ln_like "--architecture' requires an argument"

not_ok_ "Verify if command line option --architecture with an empty argument fails" $BIN/lxp --architecture "" | \
  ln_like ">>> ERROR: Command line option '--architecture' requires an non-empty argument >>>"

not_ok_ "Verify if command line option --architecture with an unsupported argument fails" $BIN/lxp --architecture "unamed" | \
  lst_ln_like ">>> ERROR: Command line/conf file option --architecture/architecture requires a supported argument. See --help command line option for help >>>"

# --mirror-file
not_ok_ "Verify if a repeated command line option --mirror-file fails" $BIN/lxp --mirror-file "somefile" --mirror-file "somefile" | \
  ln_is ">>> ERROR: --mirror-file command line option was already specified >>>"

mf=$(mktemp) && rm $mf
not_ok_ "Verify if command line option --mirror-file=(non-existing file) fails" $BIN/lxp --mirror-file "$mf" | \
  lst_ln_is ">>> ERROR: Command line/conf file option --mirror-file/mirror_file requires an existing-readable file argument. See --help command line option for help >>>"

mf=$(mktemp -d)
not_ok_ "Verify if command line option --mirror-file=(a directory) fails" $BIN/lxp --mirror-file "$mf" | \
  lst_ln_is ">>> ERROR: Command line/conf file option --mirror-file/mirror_file requires an existing-readable file argument. See --help command line option for help >>>"
rmdir "$mf" 

# --locale
not_ok_ "Verify if a repeated command line option --locale fails" $BIN/lxp --locale "en_US.UTF-8" --locale "es_ES.UTF-8" | \
  ln_is ">>> ERROR: --locale command line option was already specified >>>"

not_ok_ "Verify if command line option --locale without argument fails" $BIN/lxp --locale | \
  ln_like "--locale' requires an argument"

not_ok_ "Verify if command line option --locale with an empty argument fails" $BIN/lxp --locale "" | \
  ln_like ">>> ERROR: Command line option '--locale' requires an non-empty argument >>>"

not_ok_ "Verify if command line option --locale with an unsupported argument fails" $BIN/lxp --locale "unamed" | \
  lst_ln_like ">>> ERROR: Command line/conf file option --locale/locale requires a supported argument. See --help command line option for help >>>"

# --timezone
not_ok_ "Verify if a repeated command line option --timezone fails" $BIN/lxp --timezone America/New_York --timezone Europe/Madrid | \
  ln_is ">>> ERROR: --timezone command line option was already specified >>>"

not_ok_ "Verify if command line option --timezone without argument fails" $BIN/lxp --timezone | \
  ln_like "--timezone' requires an argument"

not_ok_ "Verify if command line option --timezone with an empty argument fails" $BIN/lxp --timezone "" | \
  ln_like ">>> ERROR: Command line option '--timezone' requires an non-empty argument >>>"

not_ok_ "Verify if command line option --timezone with an unsupported argument fails" $BIN/lxp --timezone "America/Unsupported" | \
  lst_ln_like ">>> ERROR: Command line/conf file option --timezone/timezone requires a supported argument. See --help command line option for help >>>"

# --first-boot-script
not_ok_ "Verify if a repeated command line option --first-boot-script fails" $BIN/lxp --first-boot-script "somefile" --first-boot-script "somefile" | \
  ln_is ">>> ERROR: --first-boot-script command line option was already specified >>>"

fbs=$(mktemp) && rm $fbs
not_ok_ "Verify if command line option --first-boot-script=(non-existing file) fails" $BIN/lxp --first-boot-script "$fbs" | \
  lst_ln_is ">>> ERROR: Command line/conf file option --first-boot-script/first_boot_script requires an existing-readable file argument. See --help command line option for help >>>"

fbs=$(mktemp -d)
not_ok_ "Verify if command line option --first-boot-script=(a directory) fails" $BIN/lxp --first-boot-script "$fbs" | \
  lst_ln_is ">>> ERROR: Command line/conf file option --first-boot-script/first_boot_script requires an existing-readable file argument. See --help command line option for help >>>"
rmdir "$fbs" 

# --packages
not_ok_ "Verify if a repeated command line option --packages fails" $BIN/lxp --packages "apache2" --packages "mc" | \
  ln_is ">>> ERROR: --packages command line option was already specified >>>"

not_ok_ "Verify if command line option --packages without argument fails" $BIN/lxp --packages | \
  ln_like "--packages' requires an argument"

not_ok_ "Verify if command line option --packages with an empty argument fails" $BIN/lxp --packages "" | \
  ln_like ">>> ERROR: Command line option '--packages' requires an non-empty argument >>>"

rmdir "$BLSS_ENV" # remove the env

# Test Case: Tests for command line only networking options
export BLSS_ENV=$(mktemp -d) # an empty BLSS_ENV

# --net-hostname
not_ok_ "Verify if a repeated command line option --net-hostname fails" $BIN/lxp --net-hostname "myserver" --net-hostname "servermy" | \
  ln_is ">>> ERROR: --net-hostname command line option was already specified >>>"

not_ok_ "Verify if command line option --net-hostname without argument fails" $BIN/lxp --net-hostname | \
  ln_like "--net-hostname' requires an argument"

not_ok_ "Verify if command line option --net-hostname with an empty argument fails" $BIN/lxp --net-hostname "" | \
  ln_like ">>> ERROR: Command line option '--net-hostname' requires an non-empty argument >>>"

# TODO: test for invalid argument in --net-hostname cmd ln opt

# --net-dhcp
not_ok_ "Verify if a repeated command line option --net-dhcp fails" $BIN/lxp --net-dhcp yes --net-dhcp no | \
  ln_is ">>> ERROR: --net-dhcp command line option was already specified >>>"

not_ok_ "Verify if command line option '--net-dhcp' without argument fails" $BIN/lxp --net-dhcp | \
 ln_like "--net-dhcp' requires an argument"  

not_ok_ "Verify if command line option '--net-dhcp' with an empty argument fails" $BIN/lxp --net-dhcp "" | \
 ln_like ">>> ERROR: Command line option '--net-dhcp' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --net-dhcp with an invalid argument fails" $BIN/lxp --net-dhcp "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --net-dhcp/net_dhcp requires a supported argument. See --help command line option for help >>>"

# --net-address
not_ok_ "Verify if a repeated command line option --net-address fails" $BIN/lxp --net-address 192.168.1.1 --net-address 192.168.1.1 | \
  ln_is ">>> ERROR: --net-address command line option was already specified >>>"

not_ok_ "Verify if command line option '--net-address' without argument fails" $BIN/lxp --net-address | \
 ln_like "--net-address' requires an argument"  

not_ok_ "Verify if command line option '--net-address' with an empty argument fails" $BIN/lxp --net-address "" | \
 ln_like ">>> ERROR: Command line option '--net-address' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --net-address with an invalid argument fails" $BIN/lxp --net-address 192.168.0.256 --net-dhcp no --net-network 192.168.0.0 --net-netmask 255.255.0.0 | \
 lst_ln_is ">>> ERROR: Command line/conf file option --net-address/net_address requires a supported argument. See --help command line option for help >>>"

# --net-network
not_ok_ "Verify if a repeated command line option --net-network fails" $BIN/lxp --net-network 192.168.0.0 --net-network 192.168.0.0 | \
  ln_is ">>> ERROR: --net-network command line option was already specified >>>"

not_ok_ "Verify if command line option '--net-network' without argument fails" $BIN/lxp --net-network | \
 ln_like "--net-network' requires an argument"  

not_ok_ "Verify if command line option '--net-network' with an empty argument fails" $BIN/lxp --net-network "" | \
 ln_like ">>> ERROR: Command line option '--net-network' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --net-network with an invalid argument fails" $BIN/lxp --net-network 192.168.256.256 --net-dhcp no --net-address 192.168.1.1 --net-netmask 255.255.0.0 | \
 lst_ln_is ">>> ERROR: Command line/conf file option --net-network/net_network requires a supported argument. See --help command line option for help >>>"

# --net-netmask
not_ok_ "Verify if a repeated command line option --net-netmask fails" $BIN/lxp --net-netmask 255.255.0.0 --net-netmask 255.255.0.0 | \
  ln_is ">>> ERROR: --net-netmask command line option was already specified >>>"

not_ok_ "Verify if command line option '--net-netmask' without argument fails" $BIN/lxp --net-netmask | \
 ln_like "--net-netmask' requires an argument"  

not_ok_ "Verify if command line option '--net-netmask' with an empty argument fails" $BIN/lxp --net-netmask "" | \
 ln_like ">>> ERROR: Command line option '--net-netmask' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --net-netmask with an invalid argument fails" $BIN/lxp --net-netmask 255.255.0.256 --net-dhcp no --net-network 192.168.0.0 --net-address 192.168.1.1 | \
 lst_ln_is ">>> ERROR: Command line/conf file option --net-netmask/net_netmask requires a supported argument. See --help command line option for help >>>"

# --net-broadcast
not_ok_ "Verify if a repeated command line option --net-broadcast fails" $BIN/lxp --net-broadcast 192.168.255.255 --net-broadcast 192.168.255.255 | \
  ln_is ">>> ERROR: --net-broadcast command line option was already specified >>>"

not_ok_ "Verify if command line option '--net-broadcast' without argument fails" $BIN/lxp --net-broadcast | \
 ln_like "--net-broadcast' requires an argument"  

not_ok_ "Verify if command line option '--net-broadcast' with an empty argument fails" $BIN/lxp --net-broadcast "" | \
 ln_like ">>> ERROR: Command line option '--net-broadcast' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --net-broadcast with an invalid argument fails" $BIN/lxp --net-broadcast 192.168.256.256 --net-dhcp no --net-address 192.168.1.1 --net-network 192.168.0.0 --net-netmask 255.255.0.0 | \
 lst_ln_is ">>> ERROR: Command line/conf file option --net-broadcast/net_broadcast requires a supported argument. See --help command line option for help >>>"

# --net-gateway
not_ok_ "Verify if a repeated command line option --net-gateway fails" $BIN/lxp --net-gateway 192.168.0.1 --net-gateway 192.168.0.1 | \
  ln_is ">>> ERROR: --net-gateway command line option was already specified >>>"

not_ok_ "Verify if command line option '--net-gateway' without argument fails" $BIN/lxp --net-gateway | \
 ln_like "--net-gateway' requires an argument"  

not_ok_ "Verify if command line option '--net-gateway' with an empty argument fails" $BIN/lxp --net-gateway "" | \
 ln_like ">>> ERROR: Command line option '--net-gateway' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --net-gateway with an invalid argument fails" $BIN/lxp --net-gateway 192.168.0.256 --net-dhcp no --net-address 192.168.1.1 --net-network 192.168.0.0 --net-netmask 255.255.0.0 | \
 lst_ln_is ">>> ERROR: Command line/conf file option --net-gateway/net_gateway requires a supported argument. See --help command line option for help >>>"

# --net-search
not_ok_ "Verify if a repeated command line option --net-search fails" $BIN/lxp --net-search "home.dev" --net-search "work.dev" | \
  ln_is ">>> ERROR: --net-search command line option was already specified >>>"

not_ok_ "Verify if command line option --net-search without argument fails" $BIN/lxp --net-search | \
  ln_like "--net-search' requires an argument"

not_ok_ "Verify if command line option --net-search with an empty argument fails" $BIN/lxp --net-search "" | \
  ln_like ">>> ERROR: Command line option '--net-search' requires an non-empty argument >>>"

# TODO: test for invalid argument in --net-search cmd ln opt

# --net-nameservers
not_ok_ "Verify if a repeated command line option --net-nameservers fails" $BIN/lxp --net-nameservers 192.168.0.2,192.168.0.3 --net-nameservers 192.168.0.2,192.168.0.3 | \
  ln_is ">>> ERROR: --net-nameservers command line option was already specified >>>"

not_ok_ "Verify if command line option '--net-nameservers' without argument fails" $BIN/lxp --net-nameservers | \
 ln_like "--net-nameservers' requires an argument"  

not_ok_ "Verify if command line option '--net-nameservers' with an empty argument fails" $BIN/lxp --net-nameservers "" | \
 ln_like ">>> ERROR: Command line option '--net-nameservers' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --net-nameservers with an invalid argument fails" $BIN/lxp --net-nameservers 192.168.0.2,192.168.0.256 --net-dhcp no --net-address 192.168.1.1 --net-network 192.168.0.0 --net-netmask 255.255.0.0 | \
 lst_ln_is ">>> ERROR: Command line/conf file option --net-nameservers/net_nameservers requires a supported argument. See --help command line option for help >>>"

# --net-ntpservers
not_ok_ "Verify if a repeated command line option --net-ntpservers fails" $BIN/lxp --net-ntpservers "ntp.home.dev ntp2.home.dev" --net-ntpservers "ntp3.home.dev ntp4.home.dev" | \
  ln_is ">>> ERROR: --net-ntpservers command line option was already specified >>>"

not_ok_ "Verify if command line option '--net-ntpservers' without argument fails" $BIN/lxp --net-ntpservers | \
 ln_like "--net-ntpservers' requires an argument"  

not_ok_ "Verify if command line option '--net-ntpservers' with an empty argument fails" $BIN/lxp --net-ntpservers "" | \
 ln_like ">>> ERROR: Command line option '--net-ntpservers' requires an non-empty argument >>>"  

# --net-ip6
not_ok_ "Verify if a repeated command line option --net-ip6 fails" $BIN/lxp --net-ip6 yes --net-ip6 no | \
  ln_is ">>> ERROR: --net-ip6 command line option was already specified >>>"

not_ok_ "Verify if command line option '--net-ip6' without argument fails" $BIN/lxp --net-ip6 | \
 ln_like "--net-ip6' requires an argument"  

not_ok_ "Verify if command line option '--net-ip6' with an empty argument fails" $BIN/lxp --net-ip6 "" | \
 ln_like ">>> ERROR: Command line option '--net-ip6' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --net-ip6 with an invalid argument fails" $BIN/lxp --net-ip6 "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --net-ip6/net_ip6 requires a supported argument. See --help command line option for help >>>"

# --various networking cmd ln opts combinations
not_ok_ "Verify if command line option '--net-dhcp=yes' and command line option '--net-address 192.168.1.1' fails" $BIN/lxp --net-dhcp yes --net-address 192.168.1.1 | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=yes command line/conf file option excludes --net-address/net_address, --net-network/net_network, --net-netmask/net_netmask, --net-broadcast/net_broadcast and --net-gateway/net_gateway command line/conf file options >>>"

not_ok_ "Verify if command line option '--net-dhcp=yes' and command line option '--net-network 192.168.0.0' fails" $BIN/lxp --net-dhcp yes --net-network 192.168.0.0 | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=yes command line/conf file option excludes --net-address/net_address, --net-network/net_network, --net-netmask/net_netmask, --net-broadcast/net_broadcast and --net-gateway/net_gateway command line/conf file options >>>"

not_ok_ "Verify if command line option '--net-dhcp=yes' and command line option '--net-netmask 255.255.0.0' fails" $BIN/lxp --net-dhcp yes --net-netmask 255.255.0.0 | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=yes command line/conf file option excludes --net-address/net_address, --net-network/net_network, --net-netmask/net_netmask, --net-broadcast/net_broadcast and --net-gateway/net_gateway command line/conf file options >>>"

not_ok_ "Verify if command line option '--net-dhcp=yes' and command line option '--net-broadcast 192.168.255.255' fails" $BIN/lxp --net-dhcp yes --net-broadcast 192.168.255.255 | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=yes command line/conf file option excludes --net-address/net_address, --net-network/net_network, --net-netmask/net_netmask, --net-broadcast/net_broadcast and --net-gateway/net_gateway command line/conf file options >>>"

not_ok_ "Verify if command line option '--net-dhcp=yes' and command line option '---net-gateway 192.168.0.1' fails" $BIN/lxp --net-dhcp yes --net-gateway 192.168.0.1 | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=yes command line/conf file option excludes --net-address/net_address, --net-network/net_network, --net-netmask/net_netmask, --net-broadcast/net_broadcast and --net-gateway/net_gateway command line/conf file options >>>"

not_ok_ "Verify if command line option '--net-dhcp=no' without --net-address, --net-network or --net-netmask command line options fails" $BIN/lxp --net-dhcp no | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=no command line/conf file option shall be specified among --net-address/net_address, --net-network/net_network and --net-netmask/net_netmask command line/conf file options >>>"

not_ok_ "Verify if command line option '--net-dhcp=no' and '--net-address 192.168.1.1' without --net-network or --net-netmask command line options fails" $BIN/lxp --net-dhcp no --net-address 192.168.1.1 | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=no command line/conf file option shall be specified among --net-address/net_address, --net-network/net_network and --net-netmask/net_netmask command line/conf file options >>>"

not_ok_ "Verify if command line option '--net-dhcp=no' and '--net-network 192.168.0.0' without --net-address or --net-netmask command line options fails" $BIN/lxp --net-dhcp no --net-network 192.168.0.0 | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=no command line/conf file option shall be specified among --net-address/net_address, --net-network/net_network and --net-netmask/net_netmask command line/conf file options >>>"

not_ok_ "Verify if command line option '--net-dhcp=no' and '--net-netmask 255.255.0.0' without --net-address or --net-network command line options fails" $BIN/lxp --net-dhcp no --net-netmask 255.255.0.0 | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=no command line/conf file option shall be specified among --net-address/net_address, --net-network/net_network and --net-netmask/net_netmask command line/conf file options >>>"

not_ok_ "Verify if command line option '--net-dhcp=no', '--net-address 192.168.1.1' and '--net-network 192.168.0.0' without --net-netmask command line options fails" $BIN/lxp --net-dhcp no --net-address 192.168.1.1 --net-network 192.168.0.0 | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=no command line/conf file option shall be specified among --net-address/net_address, --net-network/net_network and --net-netmask/net_netmask command line/conf file options >>>"

not_ok_ "Verify if command line option '--net-dhcp=no', '--net-address 192.168.1.1' and '--net-netmask 255.255.0.0' without --net-network command line options fails" $BIN/lxp --net-dhcp no --net-address 192.168.1.1 --net-netmask 255.255.0.0 | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=no command line/conf file option shall be specified among --net-address/net_address, --net-network/net_network and --net-netmask/net_netmask command line/conf file options >>>"

not_ok_ "Verify if command line option '--net-dhcp=no', '--net-network 192.168.0.0' and '--net-netmask 255.255.0.0' without --net-address command line options fails" $BIN/lxp --net-dhcp no --net-network 192.168.0.0 --net-netmask 255.255.0.0 | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=no command line/conf file option shall be specified among --net-address/net_address, --net-network/net_network and --net-netmask/net_netmask command line/conf file options >>>"

rmdir "$BLSS_ENV" # remove the env

# Test Case: Tests for conf file only networking options
export BLSS_ENV=$(mktemp -d) # an empty BLSS_ENV
conf="$BLSS_ENV"/lxp.conf

# TODO: test for invalid argument in hostname conf file opt

# dhcp
cat > "$conf" << EOT
net_dhcp=maybe
EOT
not_ok_ "Verify if conf file option dhcp with an invalid argument fails" $BIN/lxp | \
 lst_ln_is ">>> ERROR: Command line/conf file option --net-dhcp/net_dhcp requires a supported argument. See --help command line option for help >>>"
rm $conf

# address
cat > "$conf" << EOT
net_address=192.168.0.256
net_dhcp=no
net_network=192.168.0.0
net_netmask=255.255.0.0 
EOT
not_ok_ "Verify if conf file option net_address with an invalid argument fails" $BIN/lxp | \
 lst_ln_is ">>> ERROR: Command line/conf file option --net-address/net_address requires a supported argument. See --help command line option for help >>>"
rm $conf

# network
cat > "$conf" << EOT
net_network=192.168.256.256
net_dhcp=no
net_address=192.168.1.1
net_netmask=255.255.0.0  
EOT
not_ok_ "Verify if conf file option net_network with an invalid argument fails" $BIN/lxp | \
 lst_ln_is ">>> ERROR: Command line/conf file option --net-network/net_network requires a supported argument. See --help command line option for help >>>"
rm $conf

# netmask
cat > "$conf" << EOT
net_netmask=255.255.0.256
net_dhcp=no
net_network=192.168.0.0
net_address=192.168.1.1
EOT
not_ok_ "Verify if conf file option net_netmask with an invalid argument fails" $BIN/lxp | \
 lst_ln_is ">>> ERROR: Command line/conf file option --net-netmask/net_netmask requires a supported argument. See --help command line option for help >>>"
rm $conf

# broadcast
cat > "$conf" << EOT
net_broadcast=192.168.256.256
net_dhcp=no
net_address=192.168.1.1
net_network=192.168.0.0
net_netmask=255.255.0.0
EOT
not_ok_ "Verify if conf file option net_broadcast with an invalid argument fails" $BIN/lxp | \
 lst_ln_is ">>> ERROR: Command line/conf file option --net-broadcast/net_broadcast requires a supported argument. See --help command line option for help >>>"
rm $conf

# gateway
cat > "$conf" << EOT
net_gateway=192.168.0.256
net_dhcp=no
net_address=192.168.1.1
net_network=192.168.0.0
net_netmask=255.255.0.0
EOT
not_ok_ "Verify if conf file option net_gateway with an invalid argument fails" $BIN/lxp | \
 lst_ln_is ">>> ERROR: Command line/conf file option --net-gateway/net_gateway requires a supported argument. See --help command line option for help >>>"
rm $conf

# TODO: test for networking conf file option search

# nameservers
cat > "$conf" << EOT
net_nameservers=192.168.0.2,192.168.0.256
net_dhcp=no
net_address=192.168.1.1
net_network=192.168.0.0
net_netmask=255.255.0.0
EOT
not_ok_ "Verify if conf file option net_nameservers with an invalid argument fails" $BIN/lxp | \
 lst_ln_is ">>> ERROR: Command line/conf file option --net-nameservers/net_nameservers requires a supported argument. See --help command line option for help >>>"
rm $conf

# varios networking conf file opts combinations
cat > "$conf" << EOT
net_dhcp=yes
net_address=192.168.1.1
EOT
not_ok_ "Verify if conf file 'net_dhcp=yes' and conf file option 'net_address=192.168.1.1' fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=yes command line/conf file option excludes --net-address/net_address, --net-network/net_network, --net-netmask/net_netmask, --net-broadcast/net_broadcast and --net-gateway/net_gateway command line/conf file options >>>"
rm $conf

cat > "$conf" << EOT
net_dhcp=yes
net_network=192.168.0.0
EOT
not_ok_ "Verify if conf file option 'net_dhcp=yes' and conf file option 'net_network=192.168.0.0' fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=yes command line/conf file option excludes --net-address/net_address, --net-network/net_network, --net-netmask/net_netmask, --net-broadcast/net_broadcast and --net-gateway/net_gateway command line/conf file options >>>"
rm $conf

cat > "$conf" << EOT
net_dhcp=yes
net_netmask=255.255.0.0
EOT
not_ok_ "Verify if conf file option 'net_dhcp=yes' and conf file option 'netmask=255.255.0.0' fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=yes command line/conf file option excludes --net-address/net_address, --net-network/net_network, --net-netmask/net_netmask, --net-broadcast/net_broadcast and --net-gateway/net_gateway command line/conf file options >>>"
rm $conf

cat > "$conf" << EOT
net_dhcp=yes
net_broadcast=192.168.255.255
EOT
not_ok_ "Verify if conf file option 'net_dhcp=yes' and conf file option 'broadcast=192.168.255.255' fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=yes command line/conf file option excludes --net-address/net_address, --net-network/net_network, --net-netmask/net_netmask, --net-broadcast/net_broadcast and --net-gateway/net_gateway command line/conf file options >>>"
rm $conf

cat > "$conf" << EOT
net_dhcp=yes
net_gateway=192.168.0.1
EOT
not_ok_ "Verify if conf file option 'net_dhcp=yes' and conf file option 'gateway=192.168.0.1' fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=yes command line/conf file option excludes --net-address/net_address, --net-network/net_network, --net-netmask/net_netmask, --net-broadcast/net_broadcast and --net-gateway/net_gateway command line/conf file options >>>"
rm $conf

cat > "$conf" << EOT
net_dhcp=no
EOT
not_ok_ "Verify if conf file option 'net_dhcp=no' without address, network or netmask conf file options fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=no command line/conf file option shall be specified among --net-address/net_address, --net-network/net_network and --net-netmask/net_netmask command line/conf file options >>>"
rm $conf

cat > "$conf" << EOT
net_dhcp=no
net_address=192.168.1.1
EOT
not_ok_ "Verify if conf file option 'net_dhcp=no' and 'net_address=192.168.1.1' without network or netmask conf file options fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=no command line/conf file option shall be specified among --net-address/net_address, --net-network/net_network and --net-netmask/net_netmask command line/conf file options >>>"
rm $conf

cat > "$conf" << EOT
net_dhcp=no
net_network=192.168.0.0
EOT
not_ok_ "Verify if conf file option 'net_dhcp=no' and 'net_network=192.168.0.0' without address or netmask conf file options fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=no command line/conf file option shall be specified among --net-address/net_address, --net-network/net_network and --net-netmask/net_netmask command line/conf file options >>>"
rm $conf

cat > "$conf" << EOT
net_dhcp=no
net_netmask=255.255.0.0
EOT
not_ok_ "Verify if conf file option 'net_dhcp=no' and 'net_netmask=255.255.0.0' without address or network conf file options fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=no command line/conf file option shall be specified among --net-address/net_address, --net-network/net_network and --net-netmask/net_netmask command line/conf file options >>>"
rm $conf

cat > "$conf" << EOT
net_dhcp=no
net_address=192.168.1.1
net_network=192.168.0.0 
EOT
not_ok_ "Verify if conf file option 'net_dhcp=no', 'net_address=192.168.1.1' and 'net_network=192.168.0.0' without netmask conf file options fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=no command line/conf file option shall be specified among --net-address/net_address, --net-network/net_network and --net-netmask/net_netmask command line/conf file options >>>"
rm $conf

cat > "$conf" << EOT
net_dhcp=no
net_address=192.168.1.1
net_netmask=255.255.0.0 
EOT
not_ok_ "Verify if conf file option 'net_dhcp=no', 'net_address=192.168.1.1' and 'net_netmask=255.255.0.0' without network conf file options fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=no command line/conf file option shall be specified among --net-address/net_address, --net-network/net_network and --net-netmask/net_netmask command line/conf file options >>>"
rm $conf

cat > "$conf" << EOT
net_dhcp=no
net_network=192.168.0.0
net_netmask=255.255.0.0 
EOT
not_ok_ "Verify if conf file option 'net_dhcp=no', 'net_network=192.168.0.0' and 'net_netmask=255.255.0.0' without address conf file options fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: --net-dhcp/net_dhcp=no command line/conf file option shall be specified among --net-address/net_address, --net-network/net_network and --net-netmask/net_netmask command line/conf file options >>>"
rm $conf

rmdir "$BLSS_ENV" # remove the env

# Test Case: Tests for command line only admin user options
export BLSS_ENV=$(mktemp -d) # an empty BLSS_ENV

# --admin-user:
not_ok_ "Verify if command line option '--admin-user' without argument fails" $BIN/lxp --admin-user | \
 ln_like "--admin-user' requires an argument"  

not_ok_ "Verify if command line option '--admin-user' with an empty argument fails" $BIN/lxp --admin-user "" | \
 ln_like ">>> ERROR: Command line option '--admin-user' requires an non-empty argument >>>"  

# --admin-full-name:
not_ok_ "Verify if command line option '--admin-full-name' without argument fails" $BIN/lxp --admin-full-name | \
 ln_like "--admin-full-name' requires an argument"  

not_ok_ "Verify if command line option '--admin-full-name' with an empty argument fails" $BIN/lxp --admin-full-name "" | \
 ln_like ">>> ERROR: Command line option '--admin-full-name' requires an non-empty argument >>>"  

# --admin-password
not_ok_ "Verify if command line option '--admin-password' without argument fails" $BIN/lxp --admin-password | \
 ln_like "--admin-password' requires an argument"  

not_ok_ "Verify if command line option '--admin-password' with an empty argument fails" $BIN/lxp --admin-password "" | \
 ln_like ">>> ERROR: Command line option '--admin-password' requires an non-empty argument >>>"  

rmdir "$BLSS_ENV" # remove the env

# Test Case: Tests for command line only root options
export BLSS_ENV=$(mktemp -d) # an empty BLSS_ENV

# --root-password
not_ok_ "Verify if command line option '--root-password' without argument fails" $BIN/lxp --root-password | \
 ln_like "--root-password' requires an argument"  

not_ok_ "Verify if command line option '--root-password' with an empty argument fails" $BIN/lxp --root-password "" | \
 ln_like ">>> ERROR: Command line option '--root-password' requires an non-empty argument >>>"  

not_ok_ "Verify if a valid command line option '--root-password' without '--root-remote' command line option fails" $BIN/lxp --root-password "xyz" | \
  lst_ln_is ">>> ERROR: --root-remote/root_remote command line/conf file option is missing >>>"  

# --root-remote
not_ok_ "Verify if command line option '--root-remote' without argument fails" $BIN/lxp --root-remote | \
 ln_like "--root-remote' requires an argument"  

not_ok_ "Verify if command line option '--root-remote' with an empty argument fails" $BIN/lxp --root-remote "" | \
 ln_like ">>> ERROR: Command line option '--root-remote' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --root-remote with an invalid argument fails" $BIN/lxp --root-remote "maybe" --root-password - | \
 lst_ln_is ">>> ERROR: Command line/conf file option --root-remote/root_remote requires a supported argument. See --help command line option for help >>>"

not_ok_ "Verify if a valid command line option '--root-remote' without '--root-password' command line option fails" $BIN/lxp --root-remote yes | \
  lst_ln_is ">>> ERROR: --root-password/root_password command line/conf file option is missing >>>"  

# --root-password --root-remote
not_ok_ "Verify if command line option '--root-remote=yes' and command line option '--root-password=-' fails" $BIN/lxp --root-password "-" --root-remote yes | \
  lst_ln_is ">>> ERROR: --root-remote/root_remote=yes command line/conf file option shall be used with non-empty --root-password/root_password different to the special argument '-' >>>"

rmdir "$BLSS_ENV" # remove the env

# Test Case: Tests for conf file only root options
export BLSS_ENV=$(mktemp -d) # an empty BLSS_ENV
conf="$BLSS_ENV"/lxp.conf

# root_password root_remote
cat > "$conf" << EOT
root_remote=maybe
root_password=-
EOT
not_ok_ "Verify if conf file option root_remote with an invalid argument fails" $BIN/lxp | \
 lst_ln_is ">>> ERROR: Command line/conf file option --root-remote/root_remote requires a supported argument. See --help command line option for help >>>"
rm "$conf"

cat > "$conf" << EOT
root_password=xyz
EOT
not_ok_ "Verify if a valid conf file option 'root_password' without 'root_remote' conf file option fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: --root-remote/root_remote command line/conf file option is missing >>>"  
rm "$conf"

# --root-remote
cat > "$conf" << EOT
root_remote=yes
EOT
not_ok_ "Verify if a valid conf file option 'root_remote' without 'root_password' conf file option fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: --root-password/root_password command line/conf file option is missing >>>"  
rm "$conf"

# --root-password --root-remote
cat > "$conf" << EOT
root_password=-
root_remote=yes
EOT
not_ok_ "Verify if conf file option 'root_remote=yes' and conf file option 'root_password=-' fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: --root-remote/root_remote=yes command line/conf file option shall be used with non-empty --root-password/root_password different to the special argument '-' >>>"
rm "$conf"

rmdir "$BLSS_ENV" # remove the env

# Test Case: Tests for both command line and conf file root options
export BLSS_ENV=$(mktemp -d) # an empty BLSS_ENV
conf="$BLSS_ENV"/lxp.conf

# --root-password root_remote
cat > "$conf" << EOT
root_remote=yes
EOT
not_ok_ "Verify if conf file option 'root_remote=yes' and command line option '--root-password=-' fails" $BIN/lxp --root-password "-" | \
  lst_ln_is ">>> ERROR: --root-remote/root_remote=yes command line/conf file option shall be used with non-empty --root-password/root_password different to the special argument '-' >>>"
rm "$conf"

# root_password --root-remote
cat > "$conf" << EOT
root_password=-
EOT
not_ok_ "Verify if command line option '--root-remote=yes' and conf file option 'root_password=-' fails" $BIN/lxp --root-remote yes | \
  lst_ln_is ">>> ERROR: --root-remote/root_remote=yes command line/conf file option shall be used with non-empty --root-password/root_password different to the special argument '-' >>>"
rm "$conf"

rmdir "$BLSS_ENV" # remove the env

# Test Case: Tests for PROTO_ROOT command line only option
export BLSS_ENV=$(mktemp -d) # an empty BLSS_ENV

# PROTO_ROOT
pr=$(mktemp -d) && rmdir $pr
not_ok_ "Verify if command line option PROTO_ROOT=(non-existing directory) fails" $BIN/lxp "$pr" | \
  lst_ln_is ">>> ERROR: PROTO_ROOT/proto_root command line/conf file option shall be an existing empty directory >>>"

pr=$(mktemp -d) && mkdir "$pr"/someotherdir
not_ok_ "Verify if command line option PROTO_ROOT=(non-empty directory) fails" $BIN/lxp "$pr" | \
  lst_ln_is ">>> ERROR: PROTO_ROOT/proto_root command line/conf file option shall be an existing empty directory >>>"
rm -r "$pr"

pr=$(mktemp)
not_ok_ "Verify if command line option PROTO_ROOT=(an existing file) fails" $BIN/lxp "$pr" | \
  lst_ln_is ">>> ERROR: PROTO_ROOT/proto_root command line/conf file option shall be an existing empty directory >>>"
rm "$pr"

rmdir "$BLSS_ENV" # remove the env

# Test Case: Test for proto_root conf file only option
export BLSS_ENV=$(mktemp -d) # an empty BLSS_ENV
conf="$BLSS_ENV"/lxp.conf

# proto_root
pr=$(mktemp -d) && rmdir $pr
cat > "$conf" << EOT
proto_root="${pr}"
EOT
not_ok_ "Verify if conf file option proto_root=(non-existing directory) fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: PROTO_ROOT/proto_root command line/conf file option shall be an existing empty directory >>>"
rm $conf

pr=$(mktemp -d) && mkdir "$pr"/someotherdir
cat > "$conf" << EOT
proto_root="${pr}"
EOT
not_ok_ "Verify if conf file option proto_root=(non-empty directory) fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: PROTO_ROOT/proto_root command line/conf file option shall be an existing empty directory >>>"
rm -r "$pr"

pr=$(mktemp)
cat > "$conf" << EOT
proto_root="${pr}"
EOT
not_ok_ "Verify if conf file option proto_root=(an existing file) fails" $BIN/lxp | \
  lst_ln_is ">>> ERROR: PROTO_ROOT/proto_root command line/conf file option shall be an existing empty directory >>>"
rm "$conf"

rmdir "$BLSS_ENV" # remove the env


# Test Case: Kernel modules families
export BLSS_ENV=$(mktemp -d) # an empty BLSS_ENV

# --mod-floppy
not_ok_ "Verify if a repeated command line option --mod-floppy fails" $BIN/lxp --mod-floppy yes --mod-floppy no | \
  ln_is ">>> ERROR: --mod-floppy command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-floppy' without argument fails" $BIN/lxp --mod-floppy | \
 ln_like "--mod-floppy' requires an argument"  

not_ok_ "Verify if command line option '--mod-floppy' with an empty argument fails" $BIN/lxp --mod-floppy "" | \
 ln_like ">>> ERROR: Command line option '--mod-floppy' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-floppy with an invalid argument fails" $BIN/lxp --mod-floppy "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-floppy/mod_floppy requires a supported argument. See --help command line option for help >>>"

# --mod-tape
not_ok_ "Verify if a repeated command line option --mod-tape fails" $BIN/lxp --mod-tape yes --mod-tape no | \
  ln_is ">>> ERROR: --mod-tape command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-tape' without argument fails" $BIN/lxp --mod-tape | \
 ln_like "--mod-tape' requires an argument"  

not_ok_ "Verify if command line option '--mod-tape' with an empty argument fails" $BIN/lxp --mod-tape "" | \
 ln_like ">>> ERROR: Command line option '--mod-tape' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-tape with an invalid argument fails" $BIN/lxp --mod-tape "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-tape/mod_tape requires a supported argument. See --help command line option for help >>>"

# --mod-cdrom
not_ok_ "Verify if a repeated command line option --mod-cdrom fails" $BIN/lxp --mod-cdrom yes --mod-cdrom no | \
  ln_is ">>> ERROR: --mod-cdrom command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-cdrom' without argument fails" $BIN/lxp --mod-cdrom | \
 ln_like "--mod-cdrom' requires an argument"  

not_ok_ "Verify if command line option '--mod-cdrom' with an empty argument fails" $BIN/lxp --mod-cdrom "" | \
 ln_like ">>> ERROR: Command line option '--mod-cdrom' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-cdrom with an invalid argument fails" $BIN/lxp --mod-cdrom "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-cdrom/mod_cdrom requires a supported argument. See --help command line option for help >>>"

# --mod-sound
not_ok_ "Verify if a repeated command line option --mod-sound fails" $BIN/lxp --mod-sound yes --mod-sound no | \
  ln_is ">>> ERROR: --mod-sound command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-sound' without argument fails" $BIN/lxp --mod-sound | \
 ln_like "--mod-sound' requires an argument"  

not_ok_ "Verify if command line option '--mod-sound' with an empty argument fails" $BIN/lxp --mod-sound "" | \
 ln_like ">>> ERROR: Command line option '--mod-sound' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-sound with an invalid argument fails" $BIN/lxp --mod-sound "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-sound/mod_sound requires a supported argument. See --help command line option for help >>>"

# --mod-mouse
not_ok_ "Verify if a repeated command line option --mod-mouse fails" $BIN/lxp --mod-mouse yes --mod-mouse no | \
  ln_is ">>> ERROR: --mod-mouse command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-mouse' without argument fails" $BIN/lxp --mod-mouse | \
 ln_like "--mod-mouse' requires an argument"  

not_ok_ "Verify if command line option '--mod-mouse' with an empty argument fails" $BIN/lxp --mod-mouse "" | \
 ln_like ">>> ERROR: Command line option '--mod-mouse' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-mouse with an invalid argument fails" $BIN/lxp --mod-mouse "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-mouse/mod_mouse requires a supported argument. See --help command line option for help >>>"

# --mod-usb
not_ok_ "Verify if a repeated command line option --mod-usb fails" $BIN/lxp --mod-usb yes --mod-usb no | \
  ln_is ">>> ERROR: --mod-usb command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-usb' without argument fails" $BIN/lxp --mod-usb | \
 ln_like "--mod-usb' requires an argument"  

not_ok_ "Verify if command line option '--mod-usb' with an empty argument fails" $BIN/lxp --mod-usb "" | \
 ln_like ">>> ERROR: Command line option '--mod-usb' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-usb with an invalid argument fails" $BIN/lxp --mod-usb "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-usb/mod_usb requires a supported argument. See --help command line option for help >>>"

# --mod-firewire
not_ok_ "Verify if a repeated command line option --mod-firewire fails" $BIN/lxp --mod-firewire yes --mod-firewire no | \
  ln_is ">>> ERROR: --mod-firewire command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-firewire' without argument fails" $BIN/lxp --mod-firewire | \
 ln_like "--mod-firewire' requires an argument"  

not_ok_ "Verify if command line option '--mod-firewire' with an empty argument fails" $BIN/lxp --mod-firewire "" | \
 ln_like ">>> ERROR: Command line option '--mod-firewire' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-firewire with an invalid argument fails" $BIN/lxp --mod-firewire "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-firewire/mod_firewire requires a supported argument. See --help command line option for help >>>"

# --mod-atm
not_ok_ "Verify if a repeated command line option --mod-atm fails" $BIN/lxp --mod-atm yes --mod-atm no | \
  ln_is ">>> ERROR: --mod-atm command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-atm' without argument fails" $BIN/lxp --mod-atm | \
 ln_like "--mod-atm' requires an argument"  

not_ok_ "Verify if command line option '--mod-atm' with an empty argument fails" $BIN/lxp --mod-atm "" | \
 ln_like ">>> ERROR: Command line option '--mod-atm' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-atm with an invalid argument fails" $BIN/lxp --mod-atm "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-atm/mod_atm requires a supported argument. See --help command line option for help >>>"

# --mod-auxdisplay
not_ok_ "Verify if a repeated command line option --mod-auxdisplay fails" $BIN/lxp --mod-auxdisplay yes --mod-auxdisplay no | \
  ln_is ">>> ERROR: --mod-auxdisplay command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-auxdisplay' without argument fails" $BIN/lxp --mod-auxdisplay | \
 ln_like "--mod-auxdisplay' requires an argument"  

not_ok_ "Verify if command line option '--mod-auxdisplay' with an empty argument fails" $BIN/lxp --mod-auxdisplay "" | \
 ln_like ">>> ERROR: Command line option '--mod-auxdisplay' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-auxdisplay with an invalid argument fails" $BIN/lxp --mod-auxdisplay "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-auxdisplay/mod_auxdisplay requires a supported argument. See --help command line option for help >>>"

# --mod-xen
not_ok_ "Verify if a repeated command line option --mod-xen fails" $BIN/lxp --mod-xen yes --mod-xen no | \
  ln_is ">>> ERROR: --mod-xen command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-xen' without argument fails" $BIN/lxp --mod-xen | \
 ln_like "--mod-xen' requires an argument"  

not_ok_ "Verify if command line option '--mod-xen' with an empty argument fails" $BIN/lxp --mod-xen "" | \
 ln_like ">>> ERROR: Command line option '--mod-xen' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-xen with an invalid argument fails" $BIN/lxp --mod-xen "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-xen/mod_xen requires a supported argument. See --help command line option for help >>>"

# --mod-bluetooth
not_ok_ "Verify if a repeated command line option --mod-bluetooth fails" $BIN/lxp --mod-bluetooth yes --mod-bluetooth no | \
  ln_is ">>> ERROR: --mod-bluetooth command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-bluetooth' without argument fails" $BIN/lxp --mod-bluetooth | \
 ln_like "--mod-bluetooth' requires an argument"  

not_ok_ "Verify if command line option '--mod-bluetooth' with an empty argument fails" $BIN/lxp --mod-bluetooth "" | \
 ln_like ">>> ERROR: Command line option '--mod-bluetooth' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-bluetooth with an invalid argument fails" $BIN/lxp --mod-bluetooth "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-bluetooth/mod_bluetooth requires a supported argument. See --help command line option for help >>>"

# --mod-wolfsonmicro
not_ok_ "Verify if a repeated command line option --mod-wolfsonmicro fails" $BIN/lxp --mod-wolfsonmicro yes --mod-wolfsonmicro no | \
  ln_is ">>> ERROR: --mod-wolfsonmicro command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-wolfsonmicro' without argument fails" $BIN/lxp --mod-wolfsonmicro | \
 ln_like "--mod-wolfsonmicro' requires an argument"  

not_ok_ "Verify if command line option '--mod-wolfsonmicro' with an empty argument fails" $BIN/lxp --mod-wolfsonmicro "" | \
 ln_like ">>> ERROR: Command line option '--mod-wolfsonmicro' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-wolfsonmicro with an invalid argument fails" $BIN/lxp --mod-wolfsonmicro "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-wolfsonmicro/mod_wolfsonmicro requires a supported argument. See --help command line option for help >>>"

# --mod-leds
not_ok_ "Verify if a repeated command line option --mod-leds fails" $BIN/lxp --mod-leds yes --mod-leds no | \
  ln_is ">>> ERROR: --mod-leds command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-leds' without argument fails" $BIN/lxp --mod-leds | \
 ln_like "--mod-leds' requires an argument"  

not_ok_ "Verify if command line option '--mod-leds' with an empty argument fails" $BIN/lxp --mod-leds "" | \
 ln_like ">>> ERROR: Command line option '--mod-leds' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-leds with an invalid argument fails" $BIN/lxp --mod-leds "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-leds/mod_leds requires a supported argument. See --help command line option for help >>>"

# --mod-memstick
not_ok_ "Verify if a repeated command line option --mod-memstick fails" $BIN/lxp --mod-memstick yes --mod-memstick no | \
  ln_is ">>> ERROR: --mod-memstick command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-memstick' without argument fails" $BIN/lxp --mod-memstick | \
 ln_like "--mod-memstick' requires an argument"  

not_ok_ "Verify if command line option '--mod-memstick' with an empty argument fails" $BIN/lxp --mod-memstick "" | \
 ln_like ">>> ERROR: Command line option '--mod-memstick' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-memstick with an invalid argument fails" $BIN/lxp --mod-memstick "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-memstick/mod_memstick requires a supported argument. See --help command line option for help >>>"

# --mod-multi-function-device
not_ok_ "Verify if a repeated command line option --mod-multi-function-device fails" $BIN/lxp --mod-multi-function-device yes --mod-multi-function-device no | \
  ln_is ">>> ERROR: --mod-multi-function-device command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-multi-function-device' without argument fails" $BIN/lxp --mod-multi-function-device | \
 ln_like "--mod-multi-function-device' requires an argument"  

not_ok_ "Verify if command line option '--mod-multi-function-device' with an empty argument fails" $BIN/lxp --mod-multi-function-device "" | \
 ln_like ">>> ERROR: Command line option '--mod-multi-function-device' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-multi-function-device with an invalid argument fails" $BIN/lxp --mod-multi-function-device "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-multi-function-device/mod_multi_function_device requires a supported argument. See --help command line option for help >>>"

# --mod-multi-media-card
not_ok_ "Verify if a repeated command line option --mod-multi-media-card fails" $BIN/lxp --mod-multi-media-card yes --mod-multi-media-card no | \
  ln_is ">>> ERROR: --mod-multi-media-card command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-multi-media-card' without argument fails" $BIN/lxp --mod-multi-media-card | \
 ln_like "--mod-multi-media-card' requires an argument"  

not_ok_ "Verify if command line option '--mod-multi-media-card' with an empty argument fails" $BIN/lxp --mod-multi-media-card "" | \
 ln_like ">>> ERROR: Command line option '--mod-multi-media-card' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-multi-media-card with an invalid argument fails" $BIN/lxp --mod-multi-media-card "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-multi-media-card/mod_multi_media_card requires a supported argument. See --help command line option for help >>>"

# --mod-regulator
not_ok_ "Verify if a repeated command line option --mod-regulator fails" $BIN/lxp --mod-regulator yes --mod-regulator no | \
  ln_is ">>> ERROR: --mod-regulator command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-regulator' without argument fails" $BIN/lxp --mod-regulator | \
 ln_like "--mod-regulator' requires an argument"  

not_ok_ "Verify if command line option '--mod-regulator' with an empty argument fails" $BIN/lxp --mod-regulator "" | \
 ln_like ">>> ERROR: Command line option '--mod-regulator' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-regulator with an invalid argument fails" $BIN/lxp --mod-regulator "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-regulator/mod_regulator requires a supported argument. See --help command line option for help >>>"

# --mod-ultra-wide-band
not_ok_ "Verify if a repeated command line option --mod-ultra-wide-band fails" $BIN/lxp --mod-ultra-wide-band yes --mod-ultra-wide-band no | \
  ln_is ">>> ERROR: --mod-ultra-wide-band command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-ultra-wide-band' without argument fails" $BIN/lxp --mod-ultra-wide-band | \
 ln_like "--mod-ultra-wide-band' requires an argument"  

not_ok_ "Verify if command line option '--mod-ultra-wide-band' with an empty argument fails" $BIN/lxp --mod-ultra-wide-band "" | \
 ln_like ">>> ERROR: Command line option '--mod-ultra-wide-band' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-ultra-wide-band with an invalid argument fails" $BIN/lxp --mod-ultra-wide-band "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-ultra-wide-band/mod_ultra_wide_band requires a supported argument. See --help command line option for help >>>"

# --mod-wlan
not_ok_ "Verify if a repeated command line option --mod-wlan fails" $BIN/lxp --mod-wlan yes --mod-wlan no | \
  ln_is ">>> ERROR: --mod-wlan command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-wlan' without argument fails" $BIN/lxp --mod-wlan | \
 ln_like "--mod-wlan' requires an argument"  

not_ok_ "Verify if command line option '--mod-wlan' with an empty argument fails" $BIN/lxp --mod-wlan "" | \
 ln_like ">>> ERROR: Command line option '--mod-wlan' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-wlan with an invalid argument fails" $BIN/lxp --mod-wlan "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-wlan/mod_wlan requires a supported argument. See --help command line option for help >>>"

# --mod-media
not_ok_ "Verify if a repeated command line option --mod-media fails" $BIN/lxp --mod-media yes --mod-media no | \
  ln_is ">>> ERROR: --mod-media command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-media' without argument fails" $BIN/lxp --mod-media | \
 ln_like "--mod-media' requires an argument"  

not_ok_ "Verify if command line option '--mod-media' with an empty argument fails" $BIN/lxp --mod-media "" | \
 ln_like ">>> ERROR: Command line option '--mod-media' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-media with an invalid argument fails" $BIN/lxp --mod-media "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-media/mod_media requires a supported argument. See --help command line option for help >>>"

# --mod-gaming
not_ok_ "Verify if a repeated command line option --mod-gaming fails" $BIN/lxp --mod-gaming yes --mod-gaming no | \
  ln_is ">>> ERROR: --mod-gaming command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-gaming' without argument fails" $BIN/lxp --mod-gaming | \
 ln_like "--mod-gaming' requires an argument"  

not_ok_ "Verify if command line option '--mod-gaming' with an empty argument fails" $BIN/lxp --mod-gaming "" | \
 ln_like ">>> ERROR: Command line option '--mod-gaming' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-gaming with an invalid argument fails" $BIN/lxp --mod-gaming "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-gaming/mod_gaming requires a supported argument. See --help command line option for help >>>"

# --mod-parport
not_ok_ "Verify if a repeated command line option --mod-parport fails" $BIN/lxp --mod-parport yes --mod-parport no | \
  ln_is ">>> ERROR: --mod-parport command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-parport' without argument fails" $BIN/lxp --mod-parport | \
 ln_like "--mod-parport' requires an argument"  

not_ok_ "Verify if command line option '--mod-parport' with an empty argument fails" $BIN/lxp --mod-parport "" | \
 ln_like ">>> ERROR: Command line option '--mod-parport' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-parport with an invalid argument fails" $BIN/lxp --mod-parport "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-parport/mod_parport requires a supported argument. See --help command line option for help >>>"

# --mod-extra-networking
not_ok_ "Verify if a repeated command line option --mod-extra-networking fails" $BIN/lxp --mod-extra-networking yes --mod-extra-networking no | \
  ln_is ">>> ERROR: --mod-extra-networking command line option was already specified >>>"

not_ok_ "Verify if command line option '--mod-extra-networking' without argument fails" $BIN/lxp --mod-extra-networking | \
 ln_like "--mod-extra-networking' requires an argument"  

not_ok_ "Verify if command line option '--mod-extra-networking' with an empty argument fails" $BIN/lxp --mod-extra-networking "" | \
 ln_like ">>> ERROR: Command line option '--mod-extra-networking' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --mod-extra-networking with an invalid argument fails" $BIN/lxp --mod-extra-networking "maybe" | \
 lst_ln_is ">>> ERROR: Command line/conf file option --mod-extra-networking/mod_extra_networking requires a supported argument. See --help command line option for help >>>"

rmdir "$BLSS_ENV" # remove the env

