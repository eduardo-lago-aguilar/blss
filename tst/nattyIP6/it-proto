#!/bin/bash
#
# WELCOME TO BLSS
#
# BLSS stands for Bootstrapped Linux-Server Systems, it's a collection of command line tools to
# quickly assemble, without user interaction, multiple small and optimized Linux-Server Systems
# with the purpose of an easy deployment of distributed systems, like Apache Hadoop Cloudera
# Distribution, where every Linux-Server may have a different role in the computational cluster or
# grid.
# With BLSS you can finally verify -with just one Enter key pressing- if your package-based
# system really works when you distribute it, and pay any technical debt you posses with
# yourself not accomplished yet because you donâ€™t have the necessary time for install 10 or 100
# servers coordinating jobs in a network.
# Systems you manage with BLSS scripts fit better for servicing purpose, they are reduced
# in size and have a small memory footprint. The lifecycle of such systems is composed of
# three phases, each one with a corresponding script: prototyping with lxp, cloning with lxc and
# deployment with lxd.
#
# AUTHOR
#   Written by Eduardo Lago Aguilar, eduardo.lago.aguilar@gmail.com

# Integration Test Suite for proto natty.  
#
# Multiple calls to lxp can be very time consuming. Therefor several integration 
# tests are executed for a single proto. An integration test, for any proto, 
# assumes that the proto is located at '/tmp/protoitroot', so every verification is 
# performed on the filesystem hierarchy directly under '/tmp/protoitroot'.
# 
# Proto settings for Integration Tests are enviroments located under the 'env' 
# directory. The enviroment corresponding to the "protoA", for example, should 
# have the path $BLSS_HOME/env/A.
# 
# In the scope of Integration Tests, protos are named as 'proto' + one alphabet 
# letters from A..Z in uppercase or the name like natty. 

# Resolve script location, $0 may be a link
script="$0"
# Need this for relative symlinks
while [ -h "$script" ] ; do
  lst=$(ls -ld "$script")
  lnk=$(expr "$lst" : '.*-> \(.*\)$')
  if expr "$lnk" : '/.*' > /dev/null; then
    script="$lnk"
  else
    script=$(dirname "$script")/"$lnk"
  fi
done
BLSS_HOME=$(dirname "$script")/../..
BIN="$BLSS_HOME"/bin
ENV="$BLSS_HOME"/env
EXT="$BLSS_HOME"/ext
TST="$BLSS_HOME"/tst

. "$TST"/tst-commons

# Total amount of tests to perfom
plan_tests 6

. "$TST"/it-proto-all

# Test Case: Test for /etc/hosts IP6 enabling
ptx cat /etc/hosts | {
  ln_is "127.0.0.1 localhost.localdomain localhost" "Verify if localhost is 127.0.0.1 at /etc/hosts"
  ln_is "127.0.1.1 my-ip6-host my-ip6-host.home.dev" "Verify if myserver and myserver.home.dev is 127.0.1.1 at /etc/hosts"
  ln_is_empty  
  ln_is "# The following lines are desirable for IPv6 capable hosts" "Verify if IPv6 capable hosts is active"
  ln_is "::1 my-ip6-host my-ip6-host.home.dev localhost6.localdomain6 localhost6"
  ln_is "::1 localhost ip6-localhost ip6-loopback"
  ln_is "fe00::0 ip6-localnet"
  ln_is "ff00::0 ip6-mcastprefix"
  ln_is "ff02::1 ip6-allnodes"
  ln_is "ff02::2 ip6-allrouters"
  ln_is "ff02::3 ip6-allhosts"
  no_ln	
}
