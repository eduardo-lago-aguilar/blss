#!/bin/bash

# === WELCOME ===
# 
# BLSS stands for Bootstrapped Linux Server Systems, it is set of tools to quickly 
# assemble multiple small & optimized Linux-based virtual appliances with the 
# purpose of an easy deployment of package-based distributed systems, like Apache 
# Hadoop Cloudera Distribution, where every server have a different role in a 
# computational cluster or grid. 
# 
# The delivered virtual appliances fit better for servicing purpose, they are 
# reduced in size and have a small memory footprint. The lifecycle of such systems 
# is composed of three phases: prototyping, where shared packages & configuration 
# is settled; cloning, where different server roles are defined; and finally 
# deployment where unique appliances are produced.
# 
# The project is hosted at https://bitbucket.org/eduardo_lago_aguilar/blss
# 
# === AUTHOR ===
#   Written by Eduardo Lago Aguilar, eduardo.lago.aguilar@gmail.com, 
#   http://eduardo-lago.blogspot.com

# ut-lxc-opts:
#
#   Tests for failing conditions on the command line and configuration files 
# options for lxc script.

# Resolve script location, $0 may be a link
script="$0"
# Need this for relative symlinks
while [ -h "$script" ] ; do
  lst=$(ls -ld "$script")
  lnk=$(expr "$lst" : '.*-> \(.*\)$')
  if expr "$lnk" : '/.*' > /dev/null; then
    script="$lnk"
  else
    script=$(dirname "$script")/"$lnk"
  fi
done
BLSS_HOME=$(dirname "$script")/..
BIN="$BLSS_HOME"/bin
ENV="$BLSS_HOME"/env
EXT="$BLSS_HOME"/ext
TST="$BLSS_HOME"/tst

. "$TST"/tst-commons 

# Total amount of tests to perfom
plan_tests 16

# Test Case: Test for environment

export BLSS_ENV=$(mktemp -d) && rmdir "$BLSS_ENV"
not_ok_ "Verify if BLSS_ENV=(non-existing directory) fails" $BIN/lxc --address 192.168.1.1 /tmp/cloneitroot | \
  ln_is ">>> ERROR: Environment '$BLSS_ENV' doesn't exists or isn't a readable directory >>>"
unset BLSS_ENV

export BLSS_ENV=$(mktemp)
not_ok_ "Verify if BLSS_ENV=(non-a-directory) fails" $BIN/lxc --address 192.168.1.1 /tmp/cloneitroot | \
  ln_is ">>> ERROR: Environment '$BLSS_ENV' doesn't exists or isn't a readable directory >>>"
rm "$BLSS_ENV"
unset BLSS_ENV

# Test Case: Tests for proto-root command line option
export BLSS_ENV=$(mktemp -d) # an empty BLSS_ENV

not_ok_ "Verify if command line option '--proto-root' without argument fails" $BIN/lxc --address 192.168.1.1 /tmp/cloneitroot --proto-root | \
  ln_like "--proto-root' requires an argument"

not_ok_ "Verify if command line option '--proto-root' with an empty argument fails" $BIN/lxc --address 192.168.1.1 --proto-root "" /tmp/cloneitroot | \
  ln_like ">>> ERROR: Command line option '--proto-root' requires an non-empty argument >>>"

PR=$(mktemp -d) && rmdir $PR
not_ok_ "Verify if command line option '--proto-root=(non-existing directory)' fails" $BIN/lxc --address 192.168.1.1 --proto-root $PR /tmp/cloneitroot | \
  lst_ln_is ">>> ERROR: --proto-root/proto_root command line/conf file option shall be an existing non-empty directory containing a proto system >>>"

PR=$(mktemp -d)
not_ok_ "Verify if command line option '--proto-root=(empty directory)' fails" $BIN/lxc --address 192.168.1.1 --proto-root $PR /tmp/cloneitroot | \
  lst_ln_is ">>> ERROR: --proto-root/proto_root command line/conf file option shall be an existing non-empty directory containing a proto system >>>"
rmdir $PR

rmdir "$BLSS_ENV" # remove the env

# Test Case: Tests for command line only networking options
# an BLSS_ENV with a proto_root configured to a non-empty directory
export BLSS_ENV=$(mktemp -d) && PR=$(mktemp -d) && touch $PR/xfile && cat > $BLSS_ENV/lxc.conf << EOT
proto_root=${PR}
EOT

# --hostname
not_ok_ "Verify if a repeated command line option --hostname fails" $BIN/lxc --address 192.168.1.1 /tmp/cloneitroot --hostname "myserver" --hostname "servermy" | \
  ln_is ">>> ERROR: --hostname command line option was already specified >>>"

not_ok_ "Verify if command line option --hostname without argument fails" $BIN/lxc --address 192.168.1.1 /tmp/cloneitroot --hostname | \
  ln_like "--hostname' requires an argument"

not_ok_ "Verify if command line option --hostname with an empty argument fails" $BIN/lxc --address 192.168.1.1 /tmp/cloneitroot --hostname "" | \
  ln_like ">>> ERROR: Command line option '--hostname' requires an non-empty argument >>>"

# TODO: test for invalid hostname cmd ln opt

# --address
not_ok_ "Verify if a repeated command line option --address fails" $BIN/lxc /tmp/cloneitroot --address 192.168.1.1 --address 192.168.1.1 | \
  ln_is ">>> ERROR: --address command line option was already specified >>>"

not_ok_ "Verify if command line option '--address' without argument fails" $BIN/lxc /tmp/cloneitroot --address | \
 ln_like "--address' requires an argument"  

not_ok_ "Verify if command line option '--address' with an empty argument fails" $BIN/lxc /tmp/cloneitroot --address "" | \
 ln_like ">>> ERROR: Command line option '--address' requires an non-empty argument >>>"  

not_ok_ "Verify if command line option --address with an invalid argument fails" $BIN/lxc /tmp/cloneitroot --address 192.168.0.256 | \
 lst_ln_is ">>> ERROR: Command line/conf file option --address/address requires a supported argument. See --help command line option for help >>>"

rm -r "$BLSS_ENV" # remove the env

# Test Case: Tests for CLONE_ROOT command line only option
# an BLSS_ENV with a proto_root configured to a non-empty directory
export BLSS_ENV=$(mktemp -d) && PR=$(mktemp -d) && touch $PR/xfile && cat > $BLSS_ENV/lxc.conf << EOT
proto_root=${PR}
EOT

# CLONE_ROOT
not_ok_ "Verify if command line option CLONE_ROOT is missing fails" $BIN/lxc --address 192.168.1.1 | \
  ln_like ">>> ERROR: Command line option 'CLONE_ROOT' requires an non-empty argument >>>"

cr=$(mktemp -d) && mkdir "$cr"/someotherdir
not_ok_ "Verify if command line option CLONE_ROOT=(non-empty directory) fails" $BIN/lxc --address 192.168.1.1 "$cr" | \
  lst_ln_is ">>> ERROR: CLONE_ROOT command line option shall be an empty directory >>>"
rm -r "$cr"

cr=$(mktemp)
not_ok_ "Verify if command line option CLONE_ROOT=(an existing file) fails" $BIN/lxc --address 192.168.1.1 "$cr" | \
  lst_ln_is ">>> ERROR: CLONE_ROOT command line option shall be an empty directory >>>"
rm "$cr"

rm -r "$BLSS_ENV" # remove the env
