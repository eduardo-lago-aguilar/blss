#!/bin/bash
#
# WELCOME TO BLSS
#
# BLSS stands for Bootstrapped Linux-Server Systems, it's a collection of command line tools to
# quickly assemble, without user interaction, multiple small and optimized Linux-Server Systems
# with the purpose of an easy deployment of distributed systems, like Apache Hadoop Cloudera
# Distribution, where every Linux-Server may have a different role in the computational cluster or
# grid.
# With BLSS you can finally verify -with just one Enter key pressing- if your package-based
# system really works when you distribute it, and pay any technical debt you posses with
# yourself not accomplished yet because you donâ€™t have the necessary time for install 10 or 100
# servers coordinating jobs in a network.
# Systems you manage with BLSS scripts fit better for servicing purpose, they are reduced
# in size and have a small memory footprint. The lifecycle of such systems is composed of
# three phases, each one with a corresponding script: prototyping with lxp, cloning with lxc and
# deployment with lxd.
#
# AUTHOR
#   Written by Eduardo Lago Aguilar, eduardo.lago.aguilar@gmail.com

# it-clone-all:
#
#   Common it tests for all enviroments on clone. Include this script on integration 
# tests with the 'source' command.

# Changes context to the bootstrapped system prototype under test
ctx() {
  env -u LC_ALL LANG="nl_NL.UTF-8" LANGUAGE="nl_NL:nl" TZ="Europe/Amsterdam" sudo chroot /tmp/cloneitroot "$@"
}

# Test Case: Test for hostname and networking config
ctx cat /etc/hostname | {
  ln_is "myclone" "Verify if '/etc/hostname' is correct"
}
ctx cat /etc/hosts | {
  ln_is "127.0.0.1 localhost.localdomain localhost" "Verify if localhost is 127.0.0.1 at /etc/hosts"
  ln_is "127.0.1.1 myclone myclone.home.dev" "Verify if myclone and myclone.home.dev is 127.0.1.1 at /etc/hosts"
  ln_is_empty  
  ln_is "# The following lines are desirable for IPv6 capable hosts" "Verify if IPv6 capable hosts is commented"
  ln_is "## ::1 myclone localhost6.localdomain6 localhost6"
  ln_is "## ::1 localhost ip6-localhost ip6-loopback"
  ln_is "## fe00::0 ip6-localnet"
  ln_is "## ff00::0 ip6-mcastprefix"
  ln_is "## ff02::1 ip6-allnodes"
  ln_is "## ff02::2 ip6-allrouters"
  ln_is "## ff02::3 ip6-allhosts"
  no_ln	
}
ctx cat /etc/network/interfaces | {
  ln_is "# The loopback network interface" "Verify if the loopback network interface is correct at /etc/network/interfaces"
  ln_is "auto lo" "Verify if lo automatically wakes up"
  ln_is "iface lo inet loopback" "Verify if lo defined as loopback"
  ln_is_empty
  ln_is "# The primary network interface" "Verify if the primary network interface eth0 is correct at /etc/network/interfaces"
  ln_is "auto eth0" "Verify if eth0 automatically wakes up"
  ln_is "iface eth0 inet static" "Verify if eth0 statically defined"
  ln_is "address 172.23.2.111" "Verify if correct address"
  ln_is "network 172.23.0.0" "Verify if correct network"
  ln_is "netmask 255.255.0.0" "Verify if correct netmask"
  ln_is "broadcast 172.23.255.255" "Verify if correct broadcast"
  ln_is "gateway 172.23.0.1" "Verify if correct gateway"
  ln_is "dns-nameservers 172.23.1.57" "Verify if dns-nameservers resolvconf option is correct at /etc/network/interfaces"
  ln_is "dns-search home.dev" "Verify if dns-search resolvconf option is correct at /etc/network/interfaces"
  no_ln
}

tst_pkg_installed() {
  ctx dpkg-query -W -f='${Status}' ${1:?} | awk '{print $NF}' | {
    ln_is "installed" "Verify if package ${1:?} is installed"
  }
}
tst_pkg_installed mc

