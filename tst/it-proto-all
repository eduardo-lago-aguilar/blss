#!/bin/bash
#
# WELCOME TO BLSS
#
# BLSS stands for Bootstrapped Linux-Server Systems, it's a collection of command line tools to
# quickly assemble, without user interaction, multiple small and optimized Linux-Server Systems
# with the purpose of an easy deployment of distributed systems, like Apache Hadoop Cloudera
# Distribution, where every Linux-Server may have a different role in the computational cluster or
# grid.
# With BLSS you can finally verify -with just one Enter key pressing- if your package-based
# system really works when you distribute it, and pay any technical debt you posses with
# yourself not accomplished yet because you don’t have the necessary time for install 10 or 100
# servers coordinating jobs in a network.
# Systems you manage with BLSS scripts fit better for servicing purpose, they are reduced
# in size and have a small memory footprint. The lifecycle of such systems is composed of
# three phases, each one with a corresponding script: prototyping with lxp, cloning with lxc and
# deployment with lxd.
#
# AUTHOR
#   Written by Eduardo Lago Aguilar, eduardo.lago.aguilar@gmail.com

# it-proto-all:
#
#   Common it tests for all enviroments on proto. Include this script on integration 
# tests with the 'source' command.

# Changes context to the bootstrapped system prototype under test
ptx() {
  env -u LC_ALL LANG="nl_NL.UTF-8" LANGUAGE="nl_NL:nl" TZ="Europe/Amsterdam" sudo chroot /tmp/protoitroot "$@"
}
# When use linux-image-server the command depmod fails due to the path
# /var/lib/modules/<kernel name for server version>/.. doesn't exists but
# /var/lib/modules/<kernel name for generic version>/.. exists. Seems to be
# that the command 'uname -r' doesn't prints the correct kernel info to
# STDOUT. For now use the this command instead of 'uname -r'
kver() {
  ptx find /boot -maxdepth 1 -type f | grep -m 1 /boot/vmlinuz | sort -r | sed 's/\/boot\/vmlinuz-//'
}

# Test Case: Smoke Tests
ptx true ; ok $? "Verify 'true' command execution results in 0"
ptx false ; not_ok $? "Verify 'false' command execution results in 1"  

# Test Case: Tests for locales
ptx cat /etc/default/locale | {
  ln_is "LANG=\"nl_NL.UTF-8\"" "Verify the correctness of /etc/default/locale"
}
ptx locale -a | {
  ln_is "C" "Verify the availability of C locale"
  ln_is "nl_NL.utf8" "Verify the availability of nl_NL.UTF-8 locale"
  ln_is "POSIX" "Verify the availability of POSIX locale"
  no_ln "Verify no more locales available"
}
ptx find /usr/share/locale/ -type f | {
  lns_like "/usr/share/locale/nl/LC_MESSAGES/" "Verify only locales files for nl_NL.UTF-8" 
} 

# Test Case: Tests for timezone
ptx dpkg-reconfigure -fnoninteractive tzdata 2>&1 | awk '{print $NF}' | {
  ln_is_empty
  ln_is "'Europe/Amsterdam'" "Verify the correct timezone to 'Europe/Amsterdam'" 
} 
ptx find /usr/share/zoneinfo/ -type f | sort | {
  ln_is "/usr/share/zoneinfo/Europe/Amsterdam" "Verify only timezone files for Europe/Amsterdam"
  ln_is "/usr/share/zoneinfo/posix/Europe/Amsterdam"
  ln_is "/usr/share/zoneinfo/right/Europe/Amsterdam"
  no_ln "Verify no more timezone files available"
}
ptx find /usr/share/zoneinfo/ -type d -empty |  {
  no_ln "Verify no empty timezonde directories available"
} 

# Test Case: Tests for firstboot scripts
ptx cat /etc/rc.local | {
  ln_is "#!/bin/sh -e" "Verify the correctness of /etc/rc.local"
  ln_is_empty
  ln_is "if [ ! -e /var/lib/blss\"/root/.blss/firstboot.sh\".done ]; then"
  ln_is "\"/root/.blss/firstboot.sh\""
  ln_is "touch /var/lib/blss\"/root/.blss/firstboot.sh\".done"
  ln_is "fi"
  ln_is "exit 0"
}
ptx [ -x /root/.blss/firstboot.sh ] ; ok $? "Verify if firstboot.sh is executable"
ptx [ -d /var/lib/blss ] ; ok $? "Verify the existence of directory /var/lib/blss" 

# Test Case: Tests for mirror files
ptx find /etc/apt/sources.list.d/ -type f -name *.list | {
  one_or_more_ln "Verify at least on mirror file in /etc/apt/sources.list.d"
}

# Test Case: Tests for fstab
ptx cat /etc/fstab | {
  ln_is "proc /proc proc defaults 0 0" "Verify /proc at /etc/fstab"
  ln_is "/dev/sda1 / ext3 relatime 0 1" "Verify / at /etc/fstab"
  no_ln "Verify no more entries at /etc/fstab"
}

# Test Case: Tests for APT configuration
ptx cat /etc/apt/apt.conf 2>&1 | {
  ln_is "APT::Install-Recommends \"0\" ; APT::Install-Suggests \"0\" ;" "Verify APT conf for no extra packages installation"
  no_ln
}

# Test Case: Tests for various directories cleaned
ptx find /var/cache/apt -type f \! -path /var/cache/apt/archives/lock | {
  no_ln "Verify if no files under /var/cache/apt"
}
ptx find /usr/share -type d -path /usr/share/doc -empty | {
  ln_is "/usr/share/doc" "Verify if directory /usr/share/doc is empty"
}
ptx find /usr/share -type d -path /usr/share/man -empty | {
  ln_is "/usr/share/man" "Verify if directory /usr/share/man is empty"
}
ptx find / -type d -path /tmp -empty | {
  ln_is "/tmp" "Verify if directory /tmp is empty"
}
ptx find /var -type d -path /var/tmp -empty | {
  ln_is "/var/tmp" "Verify if directory /var/tmp is empty"
}
ptx cat /var/log/dmesg | {
  ln_is "(Nothing has been logged yet.)" "Verify if kernel ring buffer is empty"
}

# Test Case: Tests for transient, unnecessary and orphaned packages purged
tst_pkg_purged() {
  ptx dpkg-query -W -f='${Status}' ${1:?} | awk '{print $NF}' | {
    ln_is "not-installed" "Verify if package ${1:?} is purged"
  }
}
tst_pkg_purged debconf-utils
tst_pkg_purged localepurge
tst_pkg_purged lsb-release
tst_pkg_purged deborphan
ptx dpkg-query -W -f='${Status}' man-db 2>&1 | {
  ln_is "Geen pakketten gevonden overeenkomend met man-db."
}

sudo mount --bind /dev /tmp/protoitroot/dev > /dev/null 
sudo mount -t proc proc /tmp/protoitroot/proc > /dev/null
sudo mount --bind /dev/pts /tmp/protoitroot/dev/pts > /dev/null
ptx apt-get -y --force-yes install deborphan &>/dev/null
ptx deborphan | {
  no_ln "Verify if no orphaned packages"
}
sudo umount /tmp/protoitroot/dev/pts > /dev/null
sudo umount /tmp/protoitroot/proc > /dev/null
sudo umount /tmp/protoitroot/dev > /dev/null

# Test Case: Tests for and updated proto
sudo mount --bind /dev /tmp/protoitroot/dev > /dev/null 
sudo mount -t proc proc /tmp/protoitroot/proc > /dev/null
sudo mount --bind /dev/pts /tmp/protoitroot/dev/pts > /dev/null
ptx apt-get update &> /dev/null
ok $? "Verify update"
ptx apt-get dist-upgrade | {
  ln_is "Pakketlijsten worden ingelezen..." "Verify no upgrade available"
  ln_is "Boom van vereisten wordt opgebouwd..."
  ln_is "De status informatie wordt gelezen..."
  ln_is "0 pakketten opgewaardeerd, 0 pakketten nieuw geïnstalleerd, 0 te verwijderen en 0 niet opgewaardeerd."
  no_ln
}
sudo umount /tmp/protoitroot/dev/pts > /dev/null
sudo umount /tmp/protoitroot/proc > /dev/null
sudo umount /tmp/protoitroot/dev > /dev/null

# Test Case: Tests for GRUB
tst_pkg_installed() {
  ptx dpkg-query -W -f='${Status}' ${1:?} | awk '{print $NF}' | {
    ln_is "installed" "Verify if package ${1:?} is installed"
  }
}
tst_pkg_installed grub
tst_pkg_installed grub-common

# Test Case: Tests for Kernel
ptx cat /etc/kernel-img.conf | {
  ln_is "do_symlinks = yes" "Verify the correctness of /etc/kernel-img.conf"
  ln_is "relative_links = yes"
  ln_is "do_bootfloppy = no"
  ln_is "do_initrd = yes"
  ln_is "link_in_boot = no"
  ln_is "postinst_hook = /usr/sbin/update-grub"
  ln_is "postrm_hook = /usr/sbin/update-grub"
  ln_is "do_bootloader = no"
  no_ln 
}
UN=$(kver) ; MJ=${UN/.*/}
UN=${UN#$MJ.} ; MN=${UN/.*/}
UN=${UN#$MN.} ; RV=${UN/-*/}
UN=${UN#$RV-} ; RS=${UN/-*/}

ptx find /boot -type f -name vmlinuz-* | {
  ln_is "/boot/vmlinuz-"$(kver) "Verify if only the current Kernel file is on /boot"
  no_ln "Verify if no other Kernel file is on /boot"
} 
ptx find /boot -type f -name initrd.img-* | {
  ln_is "/boot/initrd.img-"$(kver) "Verify if only the current initrd.img (ram disk) file is on /boot"
  no_ln "Verify if no other initrd.img file is on /boot"
}
# Test Case: Tests for IPv6 disabling
# TODO: do a test case (when a clone wake up) to verify, with lsmod, if IP6 is not active
ptx grep "# Disable ipv6" /etc/modprobe.d/aliases | {
  ln_is "alias net-pf-10 off # Disable ipv6" "Verify if IPv6 is disabled at /etc/modprobe.d/aliases"
  ln_is "alias ipv6 off # Disable ipv6"
}
ptx find /lib/modules/$(kver)/kernel/net -type d -name ipv6 | {
  no_ln "Verify if the directory /lib/modules/<kernel-release>/net/ipv6 doesn't exist"
}
ptx find /lib -type f -path *xtables/*ip6* | {
  no_ln "Verify if no ip6 related files under /lib/xtables/"
}

# Test Case: Tests for various Kernel modules disabling
# TODO: do a test case (when a clone wake up) to verify, with lsmod, if modules aren't active
tst_mod_purged() {
  #ptx cat /etc/modprobe.d/${2:-$1}.conf | {
  #  ln_is "blacklist ${1}" "Verify if Kernel module is blacklisted at /etc/modprobe.d/${2:-$1}.conf"
  #}
  ptx find /lib/modules/ -type f -path */${1}.ko | {
    no_ln "Verify if ${1}.ko file was expunged"
  }
}
tst_moddir_purged() {
  dn=$(dirname ${1})
  [ "$dn" == "." ] && unset dn || true
  ptx find /lib/modules/$(kver)/kernel/${dn} -type d -name $(basename ${1}) | {
    no_ln "Verify if ${1} modules files were expunged"
  }
}

tst_mod_purged floppy
tst_mod_purged cdrom
tst_mod_purged ide_cd_mod
tst_mod_purged snd-pcsp
tst_mod_purged pcspkr
tst_mod_purged psmouse
tst_mod_purged usb-storage
tst_mod_purged ieee1394
tst_mod_purged pcilynx
tst_mod_purged ohci1394
tst_mod_purged video1394
tst_mod_purged raw1394
tst_mod_purged sbp2
tst_mod_purged dv1394
tst_mod_purged eth1394
tst_mod_purged firewire-ohci
tst_mod_purged firewire-net
tst_mod_purged firewire-core
tst_mod_purged firewire-sbp2
tst_mod_purged zatm
tst_mod_purged uPD98402
tst_mod_purged ambassador
tst_mod_purged horizon
tst_mod_purged iphase
tst_mod_purged suni
tst_mod_purged fore_200e
tst_mod_purged eni
tst_mod_purged idt77252
tst_mod_purged solos-pci
tst_mod_purged atmtcp
tst_mod_purged firestream
tst_mod_purged lanai
tst_mod_purged he
tst_mod_purged ks0108
tst_mod_purged cfag12864b
tst_mod_purged cfag12864bfb
tst_mod_purged xen-blkfront
tst_mod_purged xen-netfront
tst_mod_purged netxen_nic
tst_mod_purged xen-kbdfront
tst_mod_purged xen-fbfront
tst_mod_purged xenfs
tst_mod_purged evtchn
tst_mod_purged bnep
tst_mod_purged cmtp
tst_mod_purged hidp
tst_mod_purged rfcomm
tst_mod_purged sco
tst_mod_purged l2cap
tst_mod_purged bluetooth
tst_mod_purged toshiba_bluetooth
tst_mod_purged bt3c_cs
tst_mod_purged btmrvl_sdio
tst_mod_purged hci_vhci
tst_mod_purged bluecard_cs
tst_mod_purged bcm203x
tst_mod_purged btsdio
tst_mod_purged dtl1_cs
tst_mod_purged bfusb
tst_mod_purged bpa10x
tst_mod_purged btusb
tst_mod_purged btmrvl
tst_mod_purged btuart_cs
tst_mod_purged ath3k
tst_mod_purged hci_uart
tst_mod_purged leds-wm831x-status
tst_mod_purged leds-wm8350
tst_mod_purged wm831x_backup
tst_mod_purged wm831x_bl
tst_mod_purged wm831x-dcdc
tst_mod_purged wm831x-gpio
tst_mod_purged wm831x-hwmon
tst_mod_purged wm831x-isink
tst_mod_purged wm831x-ldo
tst_mod_purged wm831x-on 
tst_mod_purged wm831x_power
tst_mod_purged wm831x_wdt
tst_mod_purged wm8350-gpiolib
tst_mod_purged wm8350-hwmon
tst_mod_purged wm8350_power
tst_mod_purged wm8350-regulator
tst_mod_purged wm8350_wdt
tst_mod_purged wm8400-core
tst_mod_purged wm8400-regulator
tst_mod_purged wm8739
tst_mod_purged wm8775
tst_mod_purged wm8994-gpio
tst_mod_purged wm8994-regulator
tst_mod_purged wm97xx-ts
tst_mod_purged leds-alix2
tst_mod_purged leds-mc13783
tst_mod_purged leds-net5501
tst_mod_purged ledtrig-backlight
tst_mod_purged leds-88pm860x
tst_mod_purged ledtrig-heartbeat
tst_mod_purged leds-bd2802
tst_mod_purged leds-ss4200
tst_mod_purged ledtrig-default-on
tst_mod_purged leds-lp3944
tst_mod_purged leds-dac124s085
tst_mod_purged ledtrig-gpio
tst_mod_purged leds-da903x
tst_mod_purged led-class
tst_mod_purged leds-gpio
tst_mod_purged dell-led
tst_mod_purged leds-pca9532
tst_mod_purged leds-pca955x
tst_mod_purged leds-lt3593
tst_mod_purged ledtrig-timer
tst_mod_purged leds-regulator
tst_mod_purged leds-adp5520
tst_mod_purged memstick
tst_mod_purged mspro_block
tst_mod_purged jmb38x_ms
tst_mod_purged tifm_ms
tst_mod_purged sm501
tst_mod_purged pcf50633-adc
tst_mod_purged htc-pasic3
tst_mod_purged rdc321x-southbridge
tst_mod_purged janz-cmodio
tst_mod_purged ab3100-otp
tst_mod_purged ucb1400_core
tst_mod_purged lpc_sch
tst_mod_purged mc13783-core
tst_mod_purged timberdale
tst_mod_purged pcf50633-gpio
tst_mod_purged tps65010
tst_mod_purged pcf50633
tst_mod_purged tps6507x
tst_mod_purged sdio_uart
tst_mod_purged mmc_block
tst_mod_purged via-sdmmc
tst_mod_purged sdhci-pltfm
tst_mod_purged mmc_spi
tst_mod_purged tifm_sd
tst_mod_purged sdhci
tst_mod_purged cb710-mmc
tst_mod_purged sdhci-pci
tst_mod_purged wbsd
tst_mod_purged sdricoh_cs
tst_mod_purged mc13783-regulator
tst_mod_purged bq24022
tst_mod_purged tps65023-regulator
tst_mod_purged virtual
tst_mod_purged tps6507x-regulator
tst_mod_purged max1586
tst_mod_purged max8649
tst_mod_purged max8660
tst_mod_purged max8925-regulator
tst_mod_purged lp3971
tst_mod_purged da903x
tst_mod_purged ab3100
tst_mod_purged pcf50633-regulator
tst_mod_purged userspace-consumer
tst_mod_purged wlp
tst_mod_purged i1480-dfu-usb
tst_mod_purged i1480u-wlp
tst_mod_purged i1480-est
tst_mod_purged whc-rc
tst_mod_purged hwa-rc
tst_mod_purged umc
tst_mod_purged uwb
tst_mod_purged whci

tst_moddir_purged drivers/media
tst_moddir_purged drivers/cdrom
tst_moddir_purged drivers/input/gameport
tst_moddir_purged drivers/input/joystick
tst_moddir_purged drivers/input/mouse
tst_moddir_purged drivers/input/touchscreen
tst_moddir_purged drivers/parport
tst_moddir_purged drivers/telephony
tst_moddir_purged sound
tst_moddir_purged drivers/isdn
tst_moddir_purged drivers/usb
tst_moddir_purged drivers/net/bluetooth
tst_moddir_purged net/bluetooth
tst_moddir_purged drivers/net/ieee80211
tst_moddir_purged net/ieee80211
tst_moddir_purged drivers/net/ipx
tst_moddir_purged net/ipx
tst_moddir_purged drivers/net/mac80211
tst_moddir_purged net/mac80211
tst_moddir_purged drivers/net/wireless
tst_moddir_purged net/wireless
tst_moddir_purged drivers/net/x25
tst_moddir_purged net/x25
tst_moddir_purged drivers/net/usb
tst_moddir_purged drivers/net/can/usb
tst_moddir_purged drivers/ieee1394
tst_moddir_purged drivers/firewire

# Test Case: Tests for checking packages installed
tst_pkg_installed openssh-server
tst_pkg_installed resolvconf
tst_pkg_installed sudo

# Test Case: Tests for debconf seeds
ptx apt-get -y --force-yes install debconf-utils &>/dev/null
ptx debconf-get-selections | grep mysql | sort | awk '{NF=NF; print $0}' | {
  ln_is "mysql-server-5.0 mysql-server-5.0/need_sarge_compat boolean false" "Verify if mysql debconf seeds were imported"
  ln_is "mysql-server-5.0 mysql-server-5.0/need_sarge_compat_done boolean true"        
  ln_is "mysql-server-5.0 mysql-server-5.0/nis_warning note"  
  ln_is "mysql-server-5.0 mysql-server-5.0/postrm_remove_databases boolean false"
  ln_is "mysql-server-5.0 mysql-server-5.0/really_downgrade boolean false"
  ln_is "mysql-server-5.0 mysql-server-5.0/start_on_boot boolean true"
  ln_is "mysql-server-5.0 mysql-server/root_password_again password root"
  ln_is "mysql-server-5.0 mysql-server/root_password password root"
}
ptx debconf-get-selections | grep sun-java6 | sort | awk '{NF=NF; print $0}' | {
  ln_is "sun-java6-bin shared/accepted-sun-dlj-v1-1 boolean true" "Verify if sun-java6-{jdk,jre,bin} debconf seeds were imported"
  ln_is "sun-java6-bin shared/present-sun-dlj-v1-1 note"
  ln_is "sun-java6-jdk shared/accepted-sun-dlj-v1-1 boolean true"
  ln_is "sun-java6-jdk shared/present-sun-dlj-v1-1 note"
  ln_is "sun-java6-jre shared/accepted-sun-dlj-v1-1 boolean true"
  ln_is "sun-java6-jre shared/present-sun-dlj-v1-1 note" 
  ln_is "sun-java6-jre sun-java6-jre/jcepolicy note"
  ln_is "sun-java6-jre sun-java6-jre/stopthread boolean true"
}

# Test Case: Test for hostname and networking config
ptx cat /etc/hostname | {
  ln_is "myserver" "Verify if '/etc/hostname' is correct"
}
ptx cat /etc/hosts | {
  ln_is "127.0.0.1 localhost.localdomain localhost" "Verify if localhost is 127.0.0.1 at /etc/hosts"
  ln_is "127.0.1.1 myserver myserver.home.dev" "Verify if myserver and myserver.home.dev is 127.0.1.1 at /etc/hosts"
  ln_is_empty  
  ln_is "# The following lines are desirable for IPv6 capable hosts" "Verify if IPv6 capable hosts is commented"
  ln_is "## ::1 myserver localhost6.localdomain6 localhost6"
  ln_is "## ::1 localhost ip6-localhost ip6-loopback"
  ln_is "## fe00::0 ip6-localnet"
  ln_is "## ff00::0 ip6-mcastprefix"
  ln_is "## ff02::1 ip6-allnodes"
  ln_is "## ff02::2 ip6-allrouters"
  ln_is "## ff02::3 ip6-allhosts"
  no_ln	
}
ptx cat /etc/network/interfaces | {
  ln_is "# The loopback network interface" "Verify if the loopback network interface is correct at /etc/network/interfaces"
  ln_is "auto lo" "Verify if lo automatically wakes up"
  ln_is "iface lo inet loopback" "Verify if lo defined as loopback"
  ln_is_empty
  ln_is "# The primary network interface" "Verify if the primary network interface eth0 is correct at /etc/network/interfaces"
  ln_is "auto eth0" "Verify if eth0 automatically wakes up"
  ln_is "iface eth0 inet static" "Verify if eth0 statically defined"
  ln_is "address 172.23.0.111" "Verify if correct address"
  ln_is "network 172.23.0.0" "Verify if correct network"
  ln_is "netmask 255.255.0.0" "Verify if correct netmask"
  ln_is "broadcast 172.23.255.255" "Verify if correct broadcast"
  ln_is "gateway 172.23.0.1" "Verify if correct gateway"
  ln_is "dns-nameservers 172.23.1.57" "Verify if dns-nameservers resolvconf option is correct at /etc/network/interfaces"
  ln_is "dns-search home.dev" "Verify if dns-search resolvconf option is correct at /etc/network/interfaces"
  no_ln
}

# Test Case: Test for admin user account
ptx grep ^admin:x:103:$ /etc/group | {
  ln_is "admin:x:103:" "Verify if the group 'admin' exists"
}
ptx grep '%admin ALL=(ALL) ALL' /etc/sudoers | {
  ln_is "%admin ALL=(ALL) ALL" "Verify if 'admin' group is correctly configured in '/etc/sudoers'"
} 
ptx id -u adm | {
  ln_is "1000" "Verify if the account 'adm' exists"
}
ptx id -g adm | {
  ln_is "103" "Verify if 'admin' is the effective group id for the user 'adm'"
}
ptx ls -ld /home/adm | awk '{print $3" "$4}' | {
  ln_is "adm admin" "Verify if /home/adm has the owner and group properly configured"
}
ptx ls -l $(ptx which su) $(ptx which su) | awk '{print $1}' | {
  ln_is "---s--x--x" "Verify if permisions for 'su' are correct"
  ln_is "---s--x--x" "Verify if permisions for 'sudo' are correct"
}
ptx ls -l $(ptx which su) $(ptx which su) | awk '{print $4}' | {
  ln_is "admin" "Verify if group for 'su' is correct"
  ln_is "admin" "Verify if group for 'sudo' is correct"
}

# Test Case: Test for root account
ptx grep "PermitRootLogin" /etc/ssh/sshd_config | grep -v "^[[:space:]]*#.*" | {
  ln_is "PermitRootLogin no" "Verify if root remote login is disabled"
  no_ln
}
ptx grep "root:x:0:0:root:/root:/bin/false" /etc/passwd | {
  ln_is "root:x:0:0:root:/root:/bin/false" "Verify if root login is disabled"
}

